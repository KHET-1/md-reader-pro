name: Performance Monitoring

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Clean old benchmark logs
      run: |
        echo "🧹 Cleaning old benchmark logs..."
        rm -rf logs/benchmark-*.log || true
        mkdir -p logs
        echo "✅ Old logs cleaned"

    - name: Run basic tests first
      run: npm test

    - name: Run performance tests
      run: npm run test:performance

    - name: Run benchmarks and save log
      env:
        BENCHMARK_LOG_FILE: logs/benchmark-results.log
      run: |
        touch pr-benchmarks.log
        echo "🏃 Running benchmarks..."
        npm run test:benchmarks > pr-benchmarks.log 2>&1
        if [ ! -s pr-benchmarks.log ]; then
          echo "pr-benchmarks.log was not created or is empty!" > pr-benchmarks.log
        fi
        echo "✅ Benchmarks completed"

    - name: Debug - List benchmark files
      if: always()
      run: |
        echo "📂 Listing logs directory:"
        ls -lh logs/ || echo "logs directory not found"
        echo ""
        echo "📂 Listing current directory:"
        ls -lh *.log || echo "No log files in current directory"

    - name: Debug - Show benchmark log contents
      if: always()
      run: |
        echo "📄 Benchmark results log:"
        if [ -f logs/benchmark-results.log ]; then
          cat logs/benchmark-results.log
        else
          echo "⚠️  logs/benchmark-results.log not found"
        fi
        echo ""
        echo "📄 PR benchmarks log:"
        if [ -f pr-benchmarks.log ]; then
          head -100 pr-benchmarks.log
        else
          echo "⚠️  pr-benchmarks.log not found"
        fi

    - name: Run full performance monitoring
      run: npm run performance:monitor

    - name: Generate performance report
      run: |
        echo "## Performance Test Results" > performance-report.md
        echo "### Test Environment" >> performance-report.md
        echo "- Node.js: ${{ matrix.node-version }}" >> performance-report.md
        echo "- OS: Ubuntu Latest" >> performance-report.md
        echo "- Date: $(date)" >> performance-report.md
        echo "" >> performance-report.md
        echo "### Performance Metrics" >> performance-report.md
        echo "Tests completed successfully. See job logs for detailed metrics." >> performance-report.md

    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report-node-${{ matrix.node-version }}
        path: performance-report.md
        retention-days: 30

  performance-regression:
    runs-on: ubuntu-latest
    needs: performance-tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Clean old benchmark logs
      run: |
        echo "🧹 Cleaning old benchmark logs..."
        rm -rf logs/benchmark-*.log || true
        mkdir -p logs
        echo "✅ Old logs cleaned"

    - name: Run regression detection
      env:
        BENCHMARK_LOG_FILE: logs/benchmark-regression.log
      run: |
        echo "Running performance regression detection..."
        npm run test:benchmarks 2>&1 | tee benchmark-results.log

        # Check for performance regressions (basic implementation)
        if grep -q "Slow test detected" benchmark-results.log; then
          echo "⚠️ Performance regression detected!"
          echo "See benchmark results for details."
          exit 1
        else
          echo "✅ No performance regressions detected."
        fi

    - name: Debug - Show regression log
      if: always()
      run: |
        echo "📄 Regression benchmark log:"
        if [ -f logs/benchmark-regression.log ]; then
          cat logs/benchmark-regression.log
        else
          echo "⚠️  logs/benchmark-regression.log not found"
        fi

    - name: Comment PR with results
      if: failure()
      uses: actions/github-script@v8
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '⚠️ **Performance Regression Detected**\n\nThe performance tests indicate potential regressions. Please review the performance test results in the Actions log.'
          })

  memory-leak-detection:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js with memory monitoring
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run memory leak detection
      run: |
        echo "Running memory leak detection..."
        node --expose-gc --max-old-space-size=512 ./node_modules/.bin/jest tests/benchmarks.test.js --verbose --runInBand

    - name: Check memory usage
      run: |
        echo "Checking for memory leaks in test output..."
        # TODO: Implement actual memory leak detection logic
        echo "Memory leak detection completed."

  performance-comparison:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Clean old benchmark logs
      run: |
        echo "🧹 Cleaning old benchmark logs..."
        rm -rf logs/benchmark-*.log || true
        mkdir -p logs
        echo "✅ Old logs cleaned"

    - name: Run PR benchmarks
      env:
        BENCHMARK_LOG_FILE: logs/benchmark-pr.log
      run: |
        npm run test:benchmarks > pr-benchmarks.log 2>&1
        touch pr-benchmarks.log
        if [ ! -s pr-benchmarks.log ]; then
          echo "pr-benchmarks.log was not created or is empty!"
          exit 1
        fi

    - name: Debug - Show PR benchmark log
      if: always()
      run: |
        echo "📄 PR benchmark log:"
        if [ -f logs/benchmark-pr.log ]; then
          cat logs/benchmark-pr.log
        else
          echo "⚠️  logs/benchmark-pr.log not found"
        fi

    - name: Checkout main branch
      uses: actions/checkout@v5
      with:
        ref: main

    - name: Install dependencies (main)
      run: npm ci

    - name: Clean old benchmark logs (main)
      run: |
        echo "🧹 Cleaning old benchmark logs..."
        rm -rf logs/benchmark-*.log || true
        mkdir -p logs
        echo "✅ Old logs cleaned"

    - name: Run main benchmarks
      env:
        BENCHMARK_LOG_FILE: logs/benchmark-main.log
      run: |
        npm run test:benchmarks > main-benchmarks.log 2>&1
        touch main-benchmarks.log
        if [ ! -s main-benchmarks.log ]; then
          echo "main-benchmarks.log was not created or is empty!"
          exit 1
        fi

    - name: Debug - Show main benchmark log
      if: always()
      run: |
        echo "📄 Main benchmark log:"
        if [ -f logs/benchmark-main.log ]; then
          cat logs/benchmark-main.log
        else
          echo "⚠️  logs/benchmark-main.log not found"
        fi

    - name: Compare performance
      run: |
        echo "## Performance Comparison" > comparison.md
        echo "### PR Branch vs Main Branch" >> comparison.md
        echo "" >> comparison.md
        echo "#### Main Branch Results:" >> comparison.md
        echo "\`\`\`" >> comparison.md
        cat main-benchmarks.log >> comparison.md
        echo "\`\`\`" >> comparison.md
        echo "" >> comparison.md
        echo "#### PR Branch Results:" >> comparison.md
        echo "\`\`\`" >> comparison.md
        cat pr-benchmarks.log >> comparison.md
        echo "\`\`\`" >> comparison.md

    - name: Upload comparison
      uses: actions/upload-artifact@v4
      with:
        name: performance-comparison
        path: comparison.md
